[tool.poetry]
name = "pseudo-code-based-learning-fastapi"
version = "0.1.0"
description = "2022 파이콘 - 의사 코드 주도 FastAPI 학습하기"
authors = [
    "Hannal <kay@hannal.net>",
]
packages = [
    { include='apps', from='.' },
    { include='libs', from='.' },
]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = {extras = ["app"], version = "^0.85.0"}
SQLAlchemy = "^1.4.41"
SQLAlchemy-Utils = "^0.38.3"
aiosqlite = "^0.17.0"
alembic = "^1.8.1"
typer = "^0.6.1"
ujson = "^5.5.0"
requests = "^2.28.1"

[tool.poetry.dev-dependencies]
black = "^22.8.0"
isort = "^5.10.1"
pytest = "^7.1.3"
pytest-mock = "^3.8.2"
pytest-cov = "^3.0.0"
pytest-env = "^0.6.2"
pytest-asyncio = "^0.19.0"
pytest-dependency = "^0.5.1"
pytest-dotenv = "^0.5.2"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.py4$'
exclude = '/(\.venv|venv|\.env|env|migrations|stubs)/'

[tool.pytest.ini_options]
testpaths = "tests"
python_files = ["tests.py", "test_*.py"]
addopts = '''
  --strict-markers
  --tb=short
  --no-cov-on-fail
  --asyncio-mode=auto
'''
env = [
]
env_override_existing_values = 1
env_files = [
    ".env.test",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning:etcd3.*:",
]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
omit = ["*/tests/*", "*/conftest.py", "*/app.py", "*/main.py"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.json]
output = "coverage.json"
